/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation libs.groovy

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        // Compile sources using an older JDK to avoid removal warnings
        languageVersion = JavaLanguageVersion.of(8)
    }
}

sourceSets {
    main {
        java {
            // Exclude optional modules that require additional dependencies
            exclude 'org/garret/perst/lucene/**'
            exclude 'org/garret/perst/jassist/**'
            exclude 'org/garret/perst/continuous/**'
            exclude 'org/garret/perst/rdf/**'
            exclude 'org/garret/perst/impl/sun14/**'
        }
    }
}

// Suppress compiler warnings to keep the build output clean
tasks.withType(JavaCompile).configureEach {
    options.warnings = false
    options.compilerArgs += ['-Xlint:-deprecation', '-Xlint:-unchecked']
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
